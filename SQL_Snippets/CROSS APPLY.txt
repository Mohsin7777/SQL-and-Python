----- PRACTICE:

-- CREATE SAMPLE DATA TABLE
SET NOCOUNT ON
GO
--DROP TABLE TEST_TABLE1
--DROP TABLE TEST_TABLE2
GO
CREATE TABLE TEST_TABLE1
(
id INT NOT NULL PRIMARY KEY,
row_count INT NOT NULL
)
CREATE TABLE TEST_TABLE2
(
id INT NOT NULL PRIMARY KEY,
value VARCHAR(20) NOT NULL
)
GO
BEGIN TRANSACTION
DECLARE @cnt INT
SET @cnt = 1
WHILE @cnt <= 100000
BEGIN
INSERT
INTO TEST_TABLE2 (id, value)
VALUES (@cnt, 'Value ' + CAST(@cnt AS VARCHAR))
SET @cnt = @cnt + 1
END
INSERT
INTO TEST_TABLE1 (id, row_count)
SELECT TOP 5
id, id % 2 + 1
FROM TEST_TABLE2
ORDER BY
id
COMMIT
GO

--- 2 TEST TABLES
SELECT * FROM TEST_TABLE1
SELECT * FROM TEST_TABLE2


--- THIS CROSS APPLY SHOULD RUN INSTANTLY, EVEN THOUGH IT WOULD TAKE MUCH LONGER WITH A SIMPLE JOIN, IT'S EVEN BETTER THEN JOIN + ROW_NUMBER()

SELECT *
FROM TEST_TABLE1 t1
CROSS APPLY
(
SELECT TOP (t1.row_count) * 
FROM TEST_TABLE2
ORDER BY
id
) t2
ORDER BY
t1.id, t2.id
